name: Artifacts deploy
run-name: ${{ github.actor }} is deploying artifacts
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        default: 'latest'
        required: true
      environment:
        description: 'Environment'
        type: environment
        required: true
      kb-version:
        description: 'KB version'
        default: 'dev-v0.1'
        required: true
jobs:
  main:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout [secret-spot-deploy] current branch
        uses: actions/checkout@v4
        with:
          path: builder
      - name: Checkout [secret-spot-kb] version [${{ inputs.kb-version }}]
        uses: actions/checkout@v4
        with:
          repository: ro-ro-by/secret-spot-kb
          ref: ${{ inputs.kb-version }}
          token: ${{ secrets.GIT_PAT }}
          path: data/kb


      #####
      # Pack YAML data
      #####
      - name: Pack KB as yaml
        run: |
          mkdir -p ./data/output
          
          docker run -v ./data/kb:/app/kb -v ./data/output:/app/output isxam/secret-spot-kb-tool:latest php bin/cli kb:repo:pack kb output/kb.yaml
          docker run -v ./data/kb:/app/kb -v ./data/output:/app/output isxam/secret-spot-kb-tool:latest php bin/cli kb:repo:pack kb output/kb-min.yaml -m

      #####
      # Make JSON version of data
      #####
      - name: Pack KB as json
        run: |
          shopt -s expand_aliases
          alias yaml2json="python -c 'import sys,yaml,json; print(json.dumps(yaml.safe_load(str(sys.stdin.read()))))'"
          
          cat ./data/output/kb.yaml | yaml2json > ./data/output/kb.json
          cat ./data/output/kb-min.yaml | yaml2json > ./data/output/kb-min.json

      #####
      # Artifacts deploying
      #####
      - name: Deploy artifacts to S3 bucket
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: 'by-secret-spot-artifacts'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_TILES_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_TILES_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-north-1'
          SOURCE_DIR: 'data/output'
          DEST_DIR: '${{ inputs.version }}'